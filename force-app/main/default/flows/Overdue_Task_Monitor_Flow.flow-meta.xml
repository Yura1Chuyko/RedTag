<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Overdue_Task_Email_To_Project_Manager</name>
        <label>Send Overdue Task Email To Project Manager</label>
        <locationX>264</locationX>
        <locationY>1116</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Loop_Overdue_Tasks</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_Project.Project_Manager__r.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Task Is Overdue</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Overdue_Task_Email_To_Queue</name>
        <label>Send Overdue Task Email To Queue</label>
        <locationX>528</locationX>
        <locationY>1116</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Loop_Overdue_Tasks</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_Queue.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Task Is Overdue</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <decisions>
        <name>Check_If_Overdue</name>
        <label>Check If Overdue</label>
        <locationX>748</locationX>
        <locationY>900</locationY>
        <defaultConnector>
            <targetReference>Loop_Overdue_Tasks</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Overdue_Task</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Overdue_Tasks.ActivityDate</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>DateToday</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Overdue_Tasks.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Project_Manager</targetReference>
            </connector>
            <label>Overdue Task</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Project_Manager</name>
        <label>Check Project Manager</label>
        <locationX>528</locationX>
        <locationY>1008</locationY>
        <defaultConnector>
            <targetReference>Loop_Overdue_Tasks</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Project_Manager_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Project.Project_Manager__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Overdue_Task_Email_To_Project_Manager</targetReference>
            </connector>
            <label>Project Manager Exists</label>
        </rules>
        <rules>
            <name>Project_Manages_Is_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Project.Project_Manager__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Overdue_Task_Email_To_Queue</targetReference>
            </connector>
            <label>Project Manages Is Blank</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>convertRecordTypeToQueueName</name>
        <dataType>String</dataType>
        <expression>IF({!Get_Record_Type.DeveloperName} == &quot;Client_Project&quot;, &quot;Client_queue&quot;, IF({!Get_Record_Type.DeveloperName} == &quot;Internal_Project&quot;, &quot;Internal_queue&quot;, null) )</expression>
    </formulas>
    <formulas>
        <name>DateToday</name>
        <dataType>Date</dataType>
        <expression>Today()</expression>
    </formulas>
    <interviewLabel>Overdue Task Monitor Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Overdue Task Monitor Flow</label>
    <loops>
        <name>Loop_Overdue_Tasks</name>
        <label>Loop Overdue Tasks</label>
        <locationX>176</locationX>
        <locationY>792</locationY>
        <collectionReference>Get_Overdue_Tasks</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_If_Overdue</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Overdue_Tasks</name>
        <label>Get Overdue Tasks</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Project</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ActivityDate</field>
            <operator>LessThan</operator>
            <value>
                <elementReference>DateToday</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <sortField>ActivityDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Project</name>
        <label>Get Project</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Project_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Project__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Project_Record_Type</name>
        <label>Get Project Record Type</label>
        <locationX>176</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Project.Id</elementReference>
            </value>
        </filters>
        <object>Project__c</object>
        <outputAssignments>
            <assignToReference>currentProjectRecordTypeId</assignToReference>
            <field>RecordTypeId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue</name>
        <label>Get Queue</label>
        <locationX>176</locationX>
        <locationY>684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Overdue_Tasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>convertRecordTypeToQueueName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>176</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currentProjectRecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Overdue_Tasks</targetReference>
        </connector>
        <object>Task</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2024-10-15</startDate>
            <startTime>00:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Task Is Overdue&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Body:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Hello,&amp;nbsp;{!$User.Username}&lt;/p&gt;&lt;p&gt;This is to notify you that the &lt;a href=&quot;{!$Record.Subject}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!$Record.Subject}&lt;/a&gt;  is overdue.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Task Details:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Task Name&lt;/strong&gt;: {!$Record.Subject}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Due Date&lt;/strong&gt;: {!$Record.ActivityDate}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt;: {!$Record.Status}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Priority&lt;/strong&gt;: {!$Record.Priority}&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Project Details:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Project Name&lt;/strong&gt;: {!Get_Project.Name}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Project Link&lt;/strong&gt;: &lt;a href=&quot;{!Get_Project.Id}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!Get_Project.Id}&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Please review the task and let us know if any further action is required.&lt;/p&gt;&lt;p&gt;Best Regards,&lt;/p&gt;&lt;p&gt;{!$User.CompanyName}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>currentProjectRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
