<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_To_Queue</name>
        <label>Send Email To Queue</label>
        <locationX>314</locationX>
        <locationY>971</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Task is Completed</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Get_Queue.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_To_User</name>
        <label>Send Email To User</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_Project.Project_Manager__r.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Task Is Completed</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <decisions>
        <name>Check_Project_Manager</name>
        <label>Check Project Manager</label>
        <locationX>314</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Manager_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Project.Project_Manager__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_To_User</targetReference>
            </connector>
            <label>Manager Exists</label>
        </rules>
        <rules>
            <name>Manager_Is_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Project.Project_Manager__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_To_Queue</targetReference>
            </connector>
            <label>Manager Is Blank</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>convertRecordTypeToQueueName</name>
        <dataType>String</dataType>
        <expression>IF({!Get_Record_Type.DeveloperName} == &quot;Client_Project&quot;, &quot;Client_queue&quot;, IF({!Get_Record_Type.DeveloperName} == &quot;Internal_Project&quot;, &quot;Internal_queue&quot;, null) )</expression>
    </formulas>
    <interviewLabel>Task Completion Email Notification. {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Task Completion Email Notification.</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Project</name>
        <label>Get Project</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Project_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Project__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Project_Record_Type</name>
        <label>Get Project Record Type</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Project.Id</elementReference>
            </value>
        </filters>
        <object>Project__c</object>
        <outputAssignments>
            <assignToReference>currentProjectRecordTypeId</assignToReference>
            <field>RecordTypeId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue</name>
        <label>Get Queue</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Project_Manager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>convertRecordTypeToQueueName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currentProjectRecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task</name>
        <label>Get Task</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Project</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Project.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Task Is Completed&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Body:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Hello,&amp;nbsp;{!$User.Username}&lt;/p&gt;&lt;p&gt;This is to notify you that the task &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt; &lt;/span&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_Task.Subject}&lt;/strong&gt; has been marked as completed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Task Details:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Task Name&lt;/strong&gt;: {!Get_Task.Subject}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Due Date&lt;/strong&gt;: {!Get_Task.ActivityDate}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt;: Completed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Priority&lt;/strong&gt;: {!Get_Task.Priority}&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Project Details:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Project Name&lt;/strong&gt;: {!Get_Project.Name}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Project Link&lt;/strong&gt;:  &lt;a href=&quot; {!Get_Project.Name}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt; {!Get_Project.Name}&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Please review the task and let us know if any further action is required.&lt;/p&gt;&lt;p&gt;Best Regards,&lt;/p&gt;&lt;p&gt;{!$User.CompanyName}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>currentProjectRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
